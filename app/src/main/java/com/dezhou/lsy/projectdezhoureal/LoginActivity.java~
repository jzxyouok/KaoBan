package com.dezhou.lsy.projectdezhoureal;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import org.apache.http.NameValuePair;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;

import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;

import TempValue.UserNum;
import exitapp.ExitApplication;
import kaobanxml.XmlParser;
import kaobanxml.XmlSharedPreferences;
import network.MyHttpClient;
import utils.URLSet;
import utils.UtilsGet;

/**
 * 登陆操作页面
 * 主要使用Thread-Handler机制！
 */
public class LoginActivity extends ActionBarActivity implements View.OnClickListener {

    private static Context context;

    //private Toolbar toolBarLogin;

    private EditText etEmail;
    private EditText etPassword;

    private Button btnLogin;
    private Button btnExit;

    private boolean isExit = false;
    private String emailGet = "";
    private String passwordGet = "";
    private String xmlInfo = null;
    private ArrayList<NameValuePair> listInfo = new ArrayList<NameValuePair>();

    private DefaultHttpClient client = null;

    private static SharedPreferences.Editor editor;

    private static Handler mHandler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            if(msg.what == 0x200) {
                String tmp = msg.getData().getString("LoginInfo").trim();
                String email = msg.getData().getString("Email").trim();
                String pwd = msg.getData().getString("Pwd").trim();
                if(tmp != null) {
                    // 注册时ｘｍｌ数据的解析,返回success，fail
                    String contentNext = XmlParser.xmlParserGet(tmp).trim();

                    //登录后返回的是userNum 相应的服务器login函数应该修改返回值
//
//                    // 判断是否为真
//                    if (!contentNext.isEmpty()){
//                        UserNum.userNum = contentNext;
//                        Toast.makeText(context, "userNum！" + UserNum.userNum, Toast.LENGTH_SHORT).show();
//                        XmlSharedPreferences.getInstance().writeUsername(editor,email);
//                        XmlSharedPreferences.getInstance().writePassword(editor,pwd);
//                        // 统一进入主界面随便看看！
//                        Intent intent = new Intent(context, MainActivity.class);
//                        // 非Ａｃｔｉｖｉｔｙ中跳转Ａｃｔｉｖｉｔｙ
//                        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
//                        context.startActivity(intent);
//                    } else {
//                        Toast.makeText(context, "登陆失败！", Toast.LENGTH_SHORT).show();
//                    }

                    // 判断是否为真
                    if ("success".equals(contentNext)) {
                        XmlSharedPreferences.getInstance().writeUsername(editor,email);
                        XmlSharedPreferences.getInstance().writePassword(editor,pwd);
                        // 统一进入主界面随便看看！
                        Intent intent = new Intent(context, MainActivity.class);
                        // 非Ａｃｔｉｖｉｔｙ中跳转Ａｃｔｉｖｉｔｙ
                        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                        context.startActivity(intent);
                    } else {
                        Toast.makeText(context, "登陆失败！", Toast.LENGTH_SHORT).show();
                    }
                } else {
                    Toast.makeText(context, "网络连接故障", Toast.LENGTH_SHORT).show();
                }
            }
        }
    };


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        initData();

        // 初始化各项组件
        initViews();

        // 加入到退出队列
        ExitApplication.getInstance().addActivity(this);
    }

    private void initData() {
        context = getApplicationContext();
        editor = XmlSharedPreferences.getInstance().getMySharedPreferencesEditor(context);
    }

    private void initViews() {
        etEmail = (EditText) findViewById(R.id.et_email);
        etPassword = (EditText) findViewById(R.id.et_password);
        btnLogin = (Button) findViewById(R.id.btn_confirm_login);
        btnLogin.setOnClickListener(this);
        btnExit = (Button) findViewById(R.id.btn_exit);
        btnExit.setOnClickListener(this);
    }


    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.btn_confirm_login:
                // 登陆操作
                emailGet = etEmail.getText().toString().trim();
                passwordGet = etPassword.getText().toString().trim();

                login(emailGet,passwordGet);
                //
                break;
            case R.id.btn_exit:
                // 退出操作
                // 统一进入主界面随便看看
                Intent intent = new Intent(context,MainActivity.class);
                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                context.startActivity(intent);
                finish();
                break;
        }
    }

    /**
     * 用户登陆
     * @param emailGet 邮箱
     * @param passwordGet　密码
     */
    private void login(final String emailGet, final String passwordGet) {
        if ("".equals(emailGet) || "".equals(passwordGet)) {
            Toast.makeText(context,"登陆信息不完整！",Toast.LENGTH_SHORT).show();
            // 清空所有输入数据
            etEmail.setText("");
            etPassword.setText("");
            return;
        }

        if(!UtilsGet.isEmail(emailGet)){
            Toast.makeText(context,"邮箱格式不正确",Toast.LENGTH_SHORT).show();
            etEmail.setText("");
            etPassword.setText("");
            //etPasswordConfirm.setText("");
            return;
        }

        // 执行登录的操作
        new Thread(new Runnable() {
            @Override
            public void run() {
                xmlInfo = postLoginInfo(emailGet, passwordGet);
                Message msg = new Message();
                msg.what = 0x200;
                Bundle bundle = new Bundle();
                bundle.putString("LoginInfo",xmlInfo);
                bundle.putString("Email",emailGet);
                bundle.putString("Pwd",passwordGet);
                msg.setData(bundle);
                mHandler.sendMessage(msg);
            }
        }).start();
    }

    /**
     * 提交登陆信息
     * @param mEmail 注册邮箱
     * @param mPassword 注册密码
     * @return 服务器返回的ｘｍｌ信息
     */
    private String postLoginInfo(String mEmail,String mPassword){
        // 将请求内容添加到请求头
        NameValuePair pairEmail = new BasicNameValuePair("email",mEmail);
        NameValuePair pairPassword = new BasicNameValuePair("password",mPassword);
        listInfo.add(pairEmail);
        listInfo.add(pairPassword);
        // 执行post操作
        client = MyHttpClient.getInstance().getHttpClient();
        String result = MyHttpClient.getInstance().doPost(client,
                URLSet.getInstance().getUrlLogin(),listInfo,true);
        return result;
    }
    /**
     * 退出操作
     * @param keyCode
     * @param event
     * @return
     */

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if(keyCode == KeyEvent.KEYCODE_BACK){
            exitByKeyDown2Click();
        }
        return false;
    }

    // 双击退出的操作
    public void exitByKeyDown2Click() {
        Timer tExit = null;
        if(isExit == false){
            isExit = true;
            Toast.makeText(context, "再按一次退出...", Toast.LENGTH_SHORT).show();
            tExit = new Timer();
            tExit.schedule(new TimerTask() {
                @Override
                public void run() {
                    isExit = false; // 取消退出的操作
                }
            },2000); // 两秒的时限，如果两秒内没有按下，则取消执行
        } else {
            ExitApplication.getInstance().exit(); // 执行退出操作
            System.exit(0);
        }
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_login, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }


}
